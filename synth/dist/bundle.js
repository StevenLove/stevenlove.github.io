/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/AudioContext.ts":
/*!*****************************!*\
  !*** ./src/AudioContext.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getReadyAudioContext\": () => (/* binding */ getReadyAudioContext)\n/* harmony export */ });\n/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Lib */ \"./src/Lib.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nlet singleton;\n// function getNewAudioContext(){\n//     let got = new AudioContext()\n//     singleton = got;\n//     return got;\n// }\n// function getExistingAudioContext(){\n//     return singleton\n// }\nfunction getReadyAudioContext() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return ensureAudioContextIsReady(getAudioContex());\n    });\n}\nfunction getAudioContex() {\n    if (singleton) {\n        return singleton;\n    }\n    singleton = new AudioContext();\n    return singleton;\n}\n/* function to await an audio context that has been enabled by the user and is running.\n    You can optionally supply an existing audiocontext to use that instance but still wait for it to become ready\n    and prompt the user to enable it of course. */\nfunction ensureAudioContextIsReady(ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield (0,_Lib__WEBPACK_IMPORTED_MODULE_0__.pageLoaded)();\n        let thingsToDoWhenWeResumeSuccessfully = [];\n        if (ctx.state === \"running\") {\n            return Promise.resolve(ctx);\n        }\n        else {\n            let p = new Promise((resolve) => {\n                ctx.onstatechange = () => {\n                    if (ctx.state === \"running\") {\n                        thingsToDoWhenWeResumeSuccessfully.forEach((fn) => { fn(); });\n                        resolve(ctx);\n                    }\n                };\n            });\n            function attemptResume() { ctx.resume(); }\n            if (ctx.state === \"suspended\") {\n                /* notify the user that they need to click a button to start the audio */\n                const button = document.createElement(\"button\");\n                button.innerText = \"Click to start audio\";\n                button.addEventListener(\"click\", attemptResume);\n                button.style.width = \"100%\";\n                button.style.height = \"100%\";\n                button.style.fontSize = \"100px\";\n                button.style.position = \"absolute\";\n                button.style.top = \"0\";\n                button.style.left = \"0\";\n                button.style.zIndex = \"1000\";\n                document.body.appendChild(button);\n                thingsToDoWhenWeResumeSuccessfully.push(() => button.remove());\n                document.addEventListener(\"keydown\", attemptResume);\n                thingsToDoWhenWeResumeSuccessfully.push(() => {\n                    document.removeEventListener(\"keydown\", attemptResume);\n                });\n            }\n            return p;\n        }\n    });\n}\n\n\n\n//# sourceURL=webpack:///./src/AudioContext.ts?");

/***/ }),

/***/ "./src/Keys.ts":
/*!*********************!*\
  !*** ./src/Keys.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Key\": () => (/* binding */ Key),\n/* harmony export */   \"KeysLevel1\": () => (/* binding */ KeysLevel1)\n/* harmony export */ });\n/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Lib */ \"./src/Lib.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nvar Key;\n(function (Key) {\n    Key[\"A\"] = \"A\";\n    Key[\"B\"] = \"B\";\n    Key[\"C\"] = \"C\";\n    Key[\"D\"] = \"D\";\n    Key[\"E\"] = \"E\";\n    Key[\"F\"] = \"F\";\n    Key[\"G\"] = \"G\";\n    Key[\"H\"] = \"H\";\n    Key[\"I\"] = \"I\";\n    Key[\"J\"] = \"J\";\n    Key[\"K\"] = \"K\";\n    Key[\"L\"] = \"L\";\n    Key[\"M\"] = \"M\";\n    Key[\"N\"] = \"N\";\n    Key[\"O\"] = \"O\";\n    Key[\"P\"] = \"P\";\n    Key[\"Q\"] = \"Q\";\n    Key[\"R\"] = \"R\";\n    Key[\"S\"] = \"S\";\n    Key[\"T\"] = \"T\";\n    Key[\"U\"] = \"U\";\n    Key[\"V\"] = \"V\";\n    Key[\"W\"] = \"W\";\n    Key[\"X\"] = \"X\";\n    Key[\"Y\"] = \"Y\";\n    Key[\"Z\"] = \"Z\";\n    Key[\"a\"] = \"a\";\n    Key[\"b\"] = \"b\";\n    Key[\"c\"] = \"c\";\n    Key[\"d\"] = \"d\";\n    Key[\"e\"] = \"e\";\n    Key[\"f\"] = \"f\";\n    Key[\"g\"] = \"g\";\n    Key[\"h\"] = \"h\";\n    Key[\"i\"] = \"i\";\n    Key[\"j\"] = \"j\";\n    Key[\"k\"] = \"k\";\n    Key[\"l\"] = \"l\";\n    Key[\"m\"] = \"m\";\n    Key[\"n\"] = \"n\";\n    Key[\"o\"] = \"o\";\n    Key[\"p\"] = \"p\";\n    Key[\"q\"] = \"q\";\n    Key[\"r\"] = \"r\";\n    Key[\"s\"] = \"s\";\n    Key[\"t\"] = \"t\";\n    Key[\"u\"] = \"u\";\n    Key[\"v\"] = \"v\";\n    Key[\"w\"] = \"w\";\n    Key[\"x\"] = \"x\";\n    Key[\"y\"] = \"y\";\n    Key[\"z\"] = \"z\";\n    Key[\"_0\"] = \"0\";\n    Key[\"_1\"] = \"1\";\n    Key[\"_2\"] = \"2\";\n    Key[\"_3\"] = \"3\";\n    Key[\"_4\"] = \"4\";\n    Key[\"_5\"] = \"5\";\n    Key[\"_6\"] = \"6\";\n    Key[\"_7\"] = \"7\";\n    Key[\"_8\"] = \"8\";\n    Key[\"_9\"] = \"9\";\n    Key[\"SPACE\"] = \" \";\n    Key[\"ENTER\"] = \"Enter\";\n    Key[\"SHIFT\"] = \"Shift\";\n    Key[\"CTRL\"] = \"Control\";\n    Key[\"ALT\"] = \"Alt\";\n    Key[\"ARROW_UP\"] = \"ArrowUp\";\n    Key[\"ARROW_DOWN\"] = \"ArrowDown\";\n    Key[\"ARROW_LEFT\"] = \"ArrowLeft\";\n    Key[\"ARROW_RIGHT\"] = \"ArrowRight\";\n    Key[\"BACKSPACE\"] = \"Backspace\";\n    Key[\"DELETE\"] = \"Delete\";\n    Key[\"INSERT\"] = \"Insert\";\n    Key[\"TAB\"] = \"Tab\";\n    Key[\"ESCAPE\"] = \"Escape\";\n    Key[\"F1\"] = \"F1\";\n    Key[\"F2\"] = \"F2\";\n    Key[\"F3\"] = \"F3\";\n    Key[\"F4\"] = \"F4\";\n    Key[\"F5\"] = \"F5\";\n    Key[\"F6\"] = \"F6\";\n    Key[\"F7\"] = \"F7\";\n    Key[\"F8\"] = \"F8\";\n    Key[\"F9\"] = \"F9\";\n    Key[\"F10\"] = \"F10\";\n    Key[\"F11\"] = \"F11\";\n    Key[\"F12\"] = \"F12\";\n    Key[\"NUMPAD_0\"] = \"Numpad0\";\n    Key[\"NUMPAD_1\"] = \"Numpad1\";\n    Key[\"NUMPAD_2\"] = \"Numpad2\";\n    Key[\"NUMPAD_3\"] = \"Numpad3\";\n    Key[\"NUMPAD_4\"] = \"Numpad4\";\n    Key[\"NUMPAD_5\"] = \"Numpad5\";\n    Key[\"NUMPAD_6\"] = \"Numpad6\";\n    Key[\"NUMPAD_7\"] = \"Numpad7\";\n    Key[\"NUMPAD_8\"] = \"Numpad8\";\n    Key[\"NUMPAD_9\"] = \"Numpad9\";\n    Key[\"NUMPAD_ADD\"] = \"NumpadAdd\";\n    Key[\"NUMPAD_SUBTRACT\"] = \"NumpadSubtract\";\n    Key[\"NUMPAD_MULTIPLY\"] = \"NumpadMultiply\";\n    Key[\"NUMPAD_DIVIDE\"] = \"NumpadDivide\";\n    Key[\"NUMPAD_DECIMAL\"] = \"NumpadDecimal\";\n    Key[\"NUMPAD_ENTER\"] = \"NumpadEnter\";\n    Key[\"SEMICOLON\"] = \";\";\n    Key[\"EQUALS\"] = \"=\";\n    Key[\"COMMA\"] = \",\";\n    Key[\"DASH\"] = \"-\";\n    Key[\"PERIOD\"] = \".\";\n    Key[\"FORWARD_SLASH\"] = \"/\";\n    Key[\"BACK_SLASH\"] = \"\\\\\";\n    Key[\"OPEN_BRACKET\"] = \"[\";\n    Key[\"CLOSE_BRACKET\"] = \"]\";\n    Key[\"SINGLE_QUOTE\"] = \"'\";\n    Key[\"BACKTICK\"] = \"`\";\n    Key[\"PAGE_UP\"] = \"PageUp\";\n    Key[\"PAGE_DOWN\"] = \"PageDown\";\n    Key[\"HOME\"] = \"Home\";\n    Key[\"END\"] = \"End\";\n    Key[\"CAPS_LOCK\"] = \"CapsLock\";\n    Key[\"NUM_LOCK\"] = \"NumLock\";\n    Key[\"SCROLL_LOCK\"] = \"ScrollLock\";\n    Key[\"PRINT_SCREEN\"] = \"PrintScreen\";\n    Key[\"PAUSE\"] = \"Pause\";\n    Key[\"CONTEXT_MENU\"] = \"ContextMenu\";\n    Key[\"UNKNOWN\"] = \"Unknown\";\n    Key[\"UNSPECIFIED\"] = \"Unspecified\";\n})(Key || (Key = {}));\nfunction KeyFromEvent(e) {\n    // compare e.key to the string value of the enum\n    for (let k in Key) {\n        if (Key[k] === e.key) {\n            return Key[k];\n        }\n    }\n    return Key.UNKNOWN;\n}\nconst KeysLevel1 = (() => __awaiter(void 0, void 0, void 0, function* () {\n    yield (0,_Lib__WEBPACK_IMPORTED_MODULE_0__.pageLoaded)();\n    let downListenerMap = new _Lib__WEBPACK_IMPORTED_MODULE_0__.LazyInitializingMap(() => new _Lib__WEBPACK_IMPORTED_MODULE_0__.CancelableEventMap());\n    let upListenerMap = new _Lib__WEBPACK_IMPORTED_MODULE_0__.LazyInitializingMap(() => new _Lib__WEBPACK_IMPORTED_MODULE_0__.CancelableEventMap());\n    let currentlyDown = new Set();\n    function keydown(e) {\n        var _a;\n        console.log(\"keydown\", e.key);\n        let k = KeyFromEvent(e);\n        if (!currentlyDown.has(k)) {\n            currentlyDown.add(k);\n            (_a = downListenerMap.get(k)) === null || _a === void 0 ? void 0 : _a.triggerAll();\n        }\n    }\n    function keyup(e) {\n        var _a;\n        console.log(\"keyup\", e.key);\n        let k = KeyFromEvent(e);\n        if (currentlyDown.has(k)) {\n            currentlyDown.delete(k);\n            (_a = upListenerMap.get(k)) === null || _a === void 0 ? void 0 : _a.triggerAll();\n        }\n    }\n    window.addEventListener(\"keydown\", keydown);\n    window.addEventListener(\"keyup\", keyup);\n    function whileHeld(k, callbackOnStart, callbackOnEnd) {\n        if (currentlyDown.has(k)) {\n            callbackOnStart();\n        }\n        let cancel1 = downListenerMap.get(k).add(callbackOnStart);\n        let cancel2 = upListenerMap.get(k).add(callbackOnEnd);\n        return new _Lib__WEBPACK_IMPORTED_MODULE_0__.Canceler(() => {\n            cancel1.cancel();\n            cancel2.cancel();\n        });\n    }\n    function whileHeldOnce(k, callbackOnStart, callbackOnEnd) {\n        let cancels = [];\n        if (currentlyDown.has(k)) {\n            callbackOnStart();\n        }\n        else {\n            cancels.push(downListenerMap.get(k).addOnce(callbackOnStart));\n        }\n        cancels.push(upListenerMap.get(k).addOnce(callbackOnEnd));\n        return new _Lib__WEBPACK_IMPORTED_MODULE_0__.Canceler(() => {\n            cancels.forEach((cancel) => {\n                cancel.cancel();\n            });\n        });\n    }\n    function onDown(k, callback) {\n        return downListenerMap.get(k).add(callback);\n    }\n    function onUp(k, callback) {\n        return upListenerMap.get(k).add(callback);\n    }\n    function onDownOnce(k, callback) {\n        return downListenerMap.get(k).addOnce(callback);\n    }\n    function onUpOnce(k, callback) {\n        return upListenerMap.get(k).addOnce(callback);\n    }\n    function clearAll(k) {\n        downListenerMap.get(k).cancelAll();\n        upListenerMap.get(k).cancelAll();\n    }\n    function isDown(k) {\n        return currentlyDown.has(k);\n    }\n    return {\n        whileHeld,\n        whileHeldOnce,\n        onDown,\n        onUp,\n        onDownOnce,\n        onUpOnce,\n        clearAll,\n        isDown,\n    };\n}));\n\n\n\n//# sourceURL=webpack:///./src/Keys.ts?");

/***/ }),

/***/ "./src/Lib.ts":
/*!********************!*\
  !*** ./src/Lib.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CancelableEventMap\": () => (/* binding */ CancelableEventMap),\n/* harmony export */   \"Canceler\": () => (/* binding */ Canceler),\n/* harmony export */   \"LazyInitializingMap\": () => (/* binding */ LazyInitializingMap),\n/* harmony export */   \"pageLoaded\": () => (/* binding */ pageLoaded)\n/* harmony export */ });\n/* function to await the page loading */\nfunction pageLoaded() {\n    return new Promise((resolvef) => {\n        if (document.readyState === \"complete\") {\n            resolvef();\n        }\n        else {\n            window.addEventListener(\"load\", () => {\n                resolvef();\n            });\n        }\n    });\n}\nclass Canceler {\n    constructor(fn) {\n        this.fn = fn;\n    }\n    cancel() {\n        this.fn();\n    }\n}\nclass CancelableEventMap {\n    constructor() {\n        this.map = new Map();\n    }\n    add(handler) {\n        const id = Math.random();\n        this.map.set(id, handler);\n        return new Canceler(() => {\n            this.cancel(id);\n        });\n    }\n    cancel(id) {\n        this.map.delete(id);\n    }\n    addOnce(handler) {\n        const id = Math.random();\n        let newHandler = () => {\n            this.cancel(id);\n            handler();\n        };\n        this.map.set(id, newHandler);\n        return new Canceler(() => {\n            this.cancel(id);\n        });\n    }\n    triggerAll() {\n        this.map.forEach((handler) => {\n            handler();\n        });\n    }\n    cancelAll() {\n        this.map.forEach((handler, id) => {\n            this.cancel(id);\n        });\n    }\n}\nclass LazyInitializingMap {\n    constructor(fn) {\n        this.map = new Map();\n        this.fn = fn;\n    }\n    get(key) {\n        if (!this.map.has(key)) {\n            this.map.set(key, this.fn(key));\n        }\n        return this.map.get(key);\n    }\n}\n\n\n\n//# sourceURL=webpack:///./src/Lib.ts?");

/***/ }),

/***/ "./src/Microphone.ts":
/*!***************************!*\
  !*** ./src/Microphone.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Microphone\": () => (/* binding */ Microphone)\n/* harmony export */ });\n/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Lib */ \"./src/Lib.ts\");\n/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ \"./src/AudioContext.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nconst Microphone = (() => __awaiter(void 0, void 0, void 0, function* () {\n    yield (0,_Lib__WEBPACK_IMPORTED_MODULE_0__.pageLoaded)();\n    const constraints = { audio: true, video: false };\n    console.log(\"mic1\");\n    let stream = yield navigator.mediaDevices.getUserMedia(constraints);\n    console.log(\"mic2\");\n    let ctx = yield (0,_AudioContext__WEBPACK_IMPORTED_MODULE_1__.getReadyAudioContext)();\n    console.log(\"mic3\");\n    let node = ctx.createMediaStreamSource(stream);\n    console.log(\"mic4\");\n    return ({\n        node,\n    });\n}));\n\n\n\n//# sourceURL=webpack:///./src/Microphone.ts?");

/***/ }),

/***/ "./src/Recorder.ts":
/*!*************************!*\
  !*** ./src/Recorder.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Recorder\": () => (/* binding */ Recorder)\n/* harmony export */ });\n/* Singleton object to hold the last 10 keys that were pressed. */\nclass Recorder {\n    constructor() {\n        this.keys = [];\n        // create a new element\n        this.htmlElement = document.createElement(\"div\");\n        this.htmlElement.style.position = \"absolute\";\n        this.htmlElement.style.top = \"0px\";\n        this.htmlElement.style.left = \"0px\";\n        this.htmlElement.style.width = \"1000px\";\n        this.htmlElement.style.height = \"100px\";\n        this.htmlElement.style.backgroundColor = \"white\";\n        this.htmlElement.style.color = \"black\";\n        this.htmlElement.style.padding = \"10px\";\n        this.htmlElement.style.border = \"1px solid black\";\n        this.htmlElement.style.fontSize = \"20px\";\n        this.htmlElement.style.display = \"inline-block\";\n        this.htmlElement.style.textAlign = \"center\";\n        this.htmlElement.style.verticalAlign = \"middle\";\n        this.htmlElement.style.lineHeight = \"80px\";\n        this.htmlElement.style.zIndex = \"100\";\n        document.body.appendChild(this.htmlElement);\n    }\n    static getInstance() {\n        if (!Recorder.instance) {\n            Recorder.instance = new Recorder();\n        }\n        return Recorder.instance;\n    }\n    addKey(key) {\n        this.keys.push(key);\n        if (this.keys.length > 10) {\n            this.keys.shift();\n        }\n        this.update();\n    }\n    // toString\n    toString() {\n        return this.keys.join(\" \");\n    }\n    update() {\n        this.htmlElement.innerHTML = this.toString();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/Recorder.ts?");

/***/ }),

/***/ "./src/Synth.ts":
/*!**********************!*\
  !*** ./src/Synth.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Synth\": () => (/* binding */ Synth)\n/* harmony export */ });\n/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Time */ \"./src/Time.ts\");\n/* harmony import */ var _Lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Lib */ \"./src/Lib.ts\");\n/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AudioContext */ \"./src/AudioContext.ts\");\n/* harmony import */ var _Microphone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Microphone */ \"./src/Microphone.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\nconst Synth = (() => __awaiter(void 0, void 0, void 0, function* () {\n    const ctx = yield (0,_AudioContext__WEBPACK_IMPORTED_MODULE_2__.getReadyAudioContext)();\n    console.log(\"sample rate\", ctx.sampleRate);\n    const C = {\n        GAIN_NODE_STOP_TIME_CONSTANT: 0.015,\n        OSCILLATOR_TIME_TO_STOP: _Time__WEBPACK_IMPORTED_MODULE_0__.Time.ms(0.5),\n        VISUALIZER_FFT_SIZE: 32768 / 4,\n        VISUALIZER_MIN_DECIBELS: -90,\n        VISUALIZER_MAX_DECIBELS: -10,\n        VISUALIZER_SMOOTHING_TIME_CONSTANT: 0.85,\n    };\n    const Gain = (() => {\n        const node = ctx.createGain();\n        const DEFAULT_VOLUME_SETTING = 1;\n        let storedVolumeSetting = DEFAULT_VOLUME_SETTING;\n        let muted = false;\n        node.gain.value = storedVolumeSetting;\n        function updateVolume() {\n            if (muted) {\n                node.gain.value = 0;\n            }\n            else {\n                node.gain.value = storedVolumeSetting;\n            }\n        }\n        return {\n            node,\n            setVolume: (vol) => {\n                storedVolumeSetting = vol;\n                updateVolume();\n            },\n            smoothStop: () => {\n                node.gain.setTargetAtTime(0, ctx.currentTime, C.GAIN_NODE_STOP_TIME_CONSTANT);\n            },\n            mute: () => {\n                muted = true;\n                updateVolume();\n            },\n            unmute: () => {\n                muted = false;\n                updateVolume();\n            },\n            toggleMute: () => {\n                muted = !muted;\n                updateVolume();\n            },\n            getVolume: () => {\n                return storedVolumeSetting;\n            },\n            isMuted: () => {\n                return muted;\n            },\n            connect: (destination) => {\n                node.connect(destination);\n            },\n        };\n    });\n    const Oscillator = (() => {\n        const node = ctx.createOscillator();\n        const gain = Gain();\n        node.connect(gain.node);\n        return {\n            node,\n            start: () => {\n                node.start();\n            },\n            stop: () => {\n                gain.smoothStop();\n                node.stop(ctx.currentTime + C.OSCILLATOR_TIME_TO_STOP.toMs());\n            },\n            setFrequency: (freq) => {\n                node.frequency.value = freq;\n            },\n            setWaveType: (type) => {\n                node.type = type;\n            },\n            setVolume: gain.setVolume,\n            mute: gain.mute,\n            unmute: gain.unmute,\n            toggleMute: gain.toggleMute,\n            getVolume: gain.getVolume,\n            isMuted: gain.isMuted,\n            connect: gain.connect,\n        };\n    });\n    const Visualizer = (() => {\n        const analyserNode = ctx.createAnalyser();\n        analyserNode.fftSize = C.VISUALIZER_FFT_SIZE;\n        analyserNode.minDecibels = C.VISUALIZER_MIN_DECIBELS;\n        analyserNode.maxDecibels = C.VISUALIZER_MAX_DECIBELS;\n        analyserNode.smoothingTimeConstant = C.VISUALIZER_SMOOTHING_TIME_CONSTANT;\n        const bufferLength = analyserNode.frequencyBinCount;\n        const analyserBuffer = new Uint8Array(bufferLength);\n        const WIDTH = 400;\n        const HEIGHT = 200;\n        /* create a canvas with the given width and height */\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = WIDTH;\n        canvas.height = HEIGHT;\n        /* get the 2d context of the canvas */\n        var canvasContext = canvas.getContext(\"2d\");\n        /* draw a rectangle with the given dimensions */\n        canvasContext.fillStyle = \"rgb(200,0,0)\";\n        canvasContext.fillRect(0, 0, WIDTH, HEIGHT);\n        const draw = () => {\n            requestAnimationFrame(draw);\n            analyserNode.getByteFrequencyData(analyserBuffer); // update data in analyserBuffer\n            canvasContext.fillStyle = \"black\";\n            canvasContext.fillRect(0, 0, WIDTH, HEIGHT);\n            var barWidth = (WIDTH / bufferLength) * 2.5;\n            var barHeight;\n            var x = 0;\n            for (var i = 0; i < bufferLength; ++i) {\n                barHeight = analyserBuffer[i] / 2;\n                canvasContext.fillStyle = 'rgb(' + (barHeight + 100) + ',50,50)';\n                canvasContext.fillRect(x, HEIGHT - barHeight / 2, barWidth, barHeight);\n                x += barWidth + 1;\n            }\n        };\n        /* append the canvas element to the screen */\n        return ({\n            node: analyserNode,\n            buffer: analyserBuffer,\n            canvas,\n            display: () => __awaiter(void 0, void 0, void 0, function* () {\n                yield (0,_Lib__WEBPACK_IMPORTED_MODULE_1__.pageLoaded)();\n                document.body.appendChild(canvas);\n                draw();\n            }),\n            connect: (destination) => {\n                analyserNode.connect(destination);\n            }\n        });\n    });\n    const ToneAnalyzer = ((startFrequency) => {\n        let node = new AudioWorkletNode(ctx, \"random-noise-processor\");\n        let targetFrequency = startFrequency;\n        function updateFrequency() {\n            node.parameters.forEach(param => {\n                param.setValueAtTime(targetFrequency, ctx.currentTime);\n            });\n            div.innerHTML = targetFrequency + \" Hz\";\n        }\n        const div = document.createElement(\"div\");\n        div.style.width = \"100px\";\n        div.style.height = \"100px\";\n        // give a padding of 10px\n        div.style.padding = \"10px\";\n        div.style.border = \"1px solid black\";\n        // set the font size to 20px\n        div.style.fontSize = \"20px\";\n        // set to inline-block so the divs can be placed next to each other\n        div.style.display = \"inline-block\";\n        // set the text to be centered\n        div.style.textAlign = \"center\";\n        // set the vertical alignment to be middle\n        div.style.verticalAlign = \"middle\";\n        // set the line height to be the same as the height of the div\n        div.style.lineHeight = \"80px\";\n        // set background-color transition to 10ms\n        div.style.transition = \"background-color 10ms linear\";\n        document.body.appendChild(div);\n        updateFrequency();\n        node.port.onmessage = (e) => {\n            let x = e.data.sum || 0;\n            div.style.backgroundColor = 'rgb(100,' + x * 255 + ',100)';\n        };\n        return {\n            node,\n            onMessage: (cb) => {\n                // node.port.onmessage = cb;\n            }\n        };\n    });\n    const masterGain = Gain();\n    const dynamicNotesIntro = Gain();\n    const dynamicNotesOutro = Gain();\n    const computerSpeakers = ctx.destination;\n    const visualizer = yield Visualizer();\n    // const chart = await MyChart()\n    yield ctx.audioWorklet.addModule(\"randomNoiseProcessor.js?q=\" + Math.random());\n    const randomNoiseNode = new AudioWorkletNode(ctx, \"random-noise-processor\");\n    let testers = [];\n    testers.push(ToneAnalyzer(440));\n    testers.push(ToneAnalyzer(493.88));\n    testers.push(ToneAnalyzer(523.25));\n    testers.push(ToneAnalyzer(587.33));\n    testers.push(ToneAnalyzer(659.25));\n    testers.push(ToneAnalyzer(698.46));\n    testers.push(ToneAnalyzer(783.99));\n    testers.push(ToneAnalyzer(880));\n    testers.push(ToneAnalyzer(987.77));\n    testers.push(ToneAnalyzer(1046.5));\n    testers.push(ToneAnalyzer(1174.66));\n    testers.push(ToneAnalyzer(1318.51));\n    let microphoneNode = (yield (0,_Microphone__WEBPACK_IMPORTED_MODULE_3__.Microphone)()).node;\n    let nodes = [\n        dynamicNotesIntro.node,\n        dynamicNotesOutro.node,\n        // microphoneNode,\n        masterGain.node,\n        visualizer.node,\n        testers.map(t => t.node),\n        computerSpeakers\n    ];\n    let flatNodes = nodes.flat();\n    for (let i = 0; i < flatNodes.length - 1; ++i) {\n        flatNodes[i].connect(flatNodes[i + 1]);\n    }\n    function playTone(freq, duration) {\n        const osc = Oscillator();\n        osc.setFrequency(freq);\n        osc.connect(dynamicNotesOutro.node);\n        osc.start();\n        if (duration) {\n            setTimeout(() => {\n                osc.stop();\n            }, duration.toMs());\n        }\n        return new _Lib__WEBPACK_IMPORTED_MODULE_1__.Canceler(() => {\n            osc.stop();\n        });\n    }\n    function printBuffer() {\n        console.log(JSON.stringify(visualizer.buffer));\n    }\n    return {\n        setTargetFrequency: (freq) => {\n            // testnode2.parameters.forEach((param)=>{\n            //     // console.log(param);\n            //     param.setValueAtTime(freq,ctx.currentTime);\n            // })\n        },\n        printBuffer,\n        playTone\n    };\n}));\n\n\n\n//# sourceURL=webpack:///./src/Synth.ts?");

/***/ }),

/***/ "./src/Time.ts":
/*!*********************!*\
  !*** ./src/Time.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Time\": () => (/* binding */ Time)\n/* harmony export */ });\n/*\nCreate a Time data type where we construct a value by calling Time.minutes(3) or Time.seconds(30)\nand from any time object we can call .toSeconds() or .toMinutes() to get the value in the other unit\n*/\nclass Time {\n    constructor(ms) {\n        this.ms = ms;\n    }\n    static ms(ms) {\n        return new Time(ms);\n    }\n    static seconds(s) {\n        return new Time(s * 1000);\n    }\n    static minutes(m) {\n        return new Time(m * 60 * 1000);\n    }\n    toSeconds() {\n        return this.ms / 1000;\n    }\n    toMinutes() {\n        return this.ms / (60 * 1000);\n    }\n    toMs() {\n        return this.ms;\n    }\n}\n\n\n\n//# sourceURL=webpack:///./src/Time.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Synth */ \"./src/Synth.ts\");\n/* harmony import */ var _Keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Keys */ \"./src/Keys.ts\");\n/* harmony import */ var _Recorder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Recorder */ \"./src/Recorder.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// import synth and time\n\n\n\nfunction main() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const synth = yield (0,_Synth__WEBPACK_IMPORTED_MODULE_0__.Synth)();\n        let keyboard = yield (0,_Keys__WEBPACK_IMPORTED_MODULE_1__.KeysLevel1)();\n        let cancelMap = new Map();\n        let multiplier = 1;\n        let recorder = _Recorder__WEBPACK_IMPORTED_MODULE_2__.Recorder.getInstance();\n        function mapKey(k, freq) {\n            keyboard.whileHeld(k, () => {\n                console.log(\"playing\", freq * multiplier);\n                cancelMap.set(k, synth.playTone(freq * multiplier));\n            }, () => {\n                var _a;\n                // record that we pressed this key with the recorder\n                recorder.addKey(k);\n                (_a = cancelMap.get(k)) === null || _a === void 0 ? void 0 : _a.cancel();\n            });\n        }\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.CAPS_LOCK, 261.63);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.a, 440);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.s, 493.88);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.d, 523.25);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.f, 587.33);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.g, 659.25);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.h, 698.46);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.j, 783.99);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.k, 880);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.l, 987.77);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.SEMICOLON, 1046.5);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.SINGLE_QUOTE, 1174.66);\n        mapKey(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.ENTER, 1318.51);\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.A, () => synth.setTargetFrequency(440));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.S, () => synth.setTargetFrequency(493.88));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.D, () => synth.setTargetFrequency(523.25));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.F, () => synth.setTargetFrequency(587.33));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.G, () => synth.setTargetFrequency(659.25));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.H, () => synth.setTargetFrequency(698.46));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.J, () => synth.setTargetFrequency(783.99));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.K, () => synth.setTargetFrequency(880));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.L, () => synth.setTargetFrequency(987.77));\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.w, () => multiplier /= 2);\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.e, () => multiplier *= 2);\n        keyboard.onDown(_Keys__WEBPACK_IMPORTED_MODULE_1__.Key.q, synth.printBuffer);\n    });\n}\nmain();\n\n\n//# sourceURL=webpack:///./src/main.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;